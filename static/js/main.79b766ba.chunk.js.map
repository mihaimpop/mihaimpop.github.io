{"version":3,"sources":["img/profile.jpg","components/Background/Background.js","components/InfoCard/locales.js","components/InfoCard/InfoCard.js","config/config.js","components/InfoCard/InfoCard.container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Background","react_default","a","createElement","className","this","props","children","Component","locales","name","position","bioL1","bioL2","bioL3","education","universityName","InfoCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLink","url","title","ReactGA","event","category","action","concat","links","config","state","_this2","src","ProfilePic","alt","map","_ref","id","icon","key","href","onClick","bind","rel","target","React","index_esm","InfoCardContainer","components_InfoCard_InfoCard","App","initialize","pageview","components_Background_Background","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79b766ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.1e9132b0.jpg\";","import React, {Component} from 'react';\r\n\r\nclass Background extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Background\">\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","const locales = {\r\n  name: \"Mihai Pop\",\r\n  position: \"Web Developer and Content Creator in Cluj-Napoca, Romania\",\r\n  bioL1: \"Hey, Iâ€™m Mihai. Iâ€™m a web developer living in Cluj-Napoca, Romania. I am a fan of music, photography \" +\r\n    \"and web development.âš¡\",\r\n  bioL2: \"I also like to produce music and videos whenever I can.ðŸŽ¹\",\r\n  bioL3: \"My contact details are below, I'm looking forward to hearing from you.\",\r\n  education: \"Education\",\r\n  universityName: \"Technical University of Cluj-Napoca\"\r\n};\r\n\r\nexport default locales;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport locales from './locales';\r\nimport ProfilePic from '../../img/profile.jpg';\r\n\r\nclass InfoCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {config: {links}} = props;\r\n    this.state = {\r\n      links: links || []\r\n    };\r\n  }\r\n\r\n  handleLink = (url, title) => {\r\n    ReactGA.event({\r\n      category: 'Social',\r\n      action: `Navigate to - ${title} - ${url}`,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {links} = this.state;\r\n    return (\r\n      <div className=\"InfoCard\">\r\n        <div className=\"ProfilePictureContainer\">\r\n          <img className=\"ProfilePicture\" src={ProfilePic} alt=\"profile-face-pic\"/>\r\n        </div>\r\n        <div className=\"InfoCard-Content\">\r\n          <div className=\"Credentials content--width content--padding\">\r\n            <span className=\"Name\">{locales.name}</span>\r\n            <span className=\"Position\">{locales.position}</span>\r\n          </div>\r\n\r\n          <div className=\"Bio content--width content--padding\">\r\n            <span className=\"bio-padding\">{locales.bioL1}</span>\r\n            <span className=\"bio-padding\">{locales.bioL2}</span>\r\n            <span className=\"bio-padding\">{locales.bioL3}</span>\r\n          </div>\r\n\r\n          <div className=\"Education content--width content--padding\">\r\n            <span className=\"bold-600\">{locales.education}</span>\r\n            <span>{locales.universityName}</span>\r\n          </div>\r\n\r\n          <div className=\"Links content--width\">\r\n            {\r\n              links.map(({icon, title, url}, id) =>\r\n                <div className=\"info-link\" key={`social-${id}`} title={url}>\r\n                  <a\r\n                    className=\"Social-Link\"\r\n                    href={url}\r\n                    onClick={this.handleLink.bind(null, url, title)}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    {icon}\r\n                  </a>\r\n                </div>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nInfoCard.propTypes = {\r\n  config: PropTypes.object\r\n};\r\n\r\nexport default InfoCard;\r\n","import React from 'react';\r\nimport {\r\n  TiSocialAtCircular,\r\n  TiSocialFacebookCircular,\r\n  TiSocialGithubCircular,\r\n  TiSocialInstagramCircular,\r\n  TiSocialLinkedinCircular,\r\n} from 'react-icons/ti';\r\n\r\nexport const config = {\r\n  links: [\r\n    {\r\n      icon: <TiSocialAtCircular/>,\r\n      title: 'Gmail',\r\n      url: 'mailto:mihai.m.m.pop@gmail.com'\r\n    },\r\n    {\r\n      icon: <TiSocialFacebookCircular/>,\r\n      title: 'Facebook',\r\n      url: 'https://www.facebook.com/mihaimmpop'\r\n    },\r\n    {\r\n      icon: <TiSocialGithubCircular/>,\r\n      title: 'Github',\r\n      url: 'https://github.com/mihaimpop'\r\n    },\r\n    {\r\n      icon: <TiSocialInstagramCircular/>,\r\n      title: 'Instagram',\r\n      url: 'https://www.instagram.com/mihaimpop'\r\n    },\r\n    {\r\n      icon: <TiSocialLinkedinCircular/>,\r\n      title: 'Linkedin',\r\n      url: 'https://www.linkedin.com/in/mihaimpop'\r\n    }\r\n  ]\r\n};\r\n","import React from 'react';\r\n\r\nimport InfoCard from './InfoCard';\r\nimport { config } from '../../config/config';\r\n\r\nconst InfoCardContainer = <InfoCard config={config} />;\r\n\r\nexport default InfoCardContainer;\r\n","import React, {Component} from 'react';\r\nimport ReactGA from 'react-ga';\r\n\r\nimport './App.css';\r\nimport Background from './components/Background/Background';\r\nimport InfoCardContainer from './components/InfoCard/InfoCard.container';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    ReactGA.initialize('UA-127063636-1');\r\n    ReactGA.pageview('personal-landing-page');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Background>\r\n          {InfoCardContainer}\r\n        </Background>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}